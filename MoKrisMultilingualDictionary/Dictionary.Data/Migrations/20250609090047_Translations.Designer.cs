// <auto-generated />
using Dictionary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dictionary.Data.Migrations
{
    [DbContext(typeof(DictionaryContext))]
    [Migration("20250609090047_Translations")]
    partial class Translations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dictionary")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dictionary.Domain.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TagId"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("TagId");

                    b.HasIndex("Text")
                        .IsUnique();

                    b.ToTable("Tags", "dictionary");
                });

            modelBuilder.Entity("Dictionary.Domain.TranslationGroup", b =>
                {
                    b.Property<int>("TranslationGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TranslationGroupId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("TranslationGroupId");

                    b.HasIndex("Description");

                    b.ToTable("TranslationGroups", "dictionary");
                });

            modelBuilder.Entity("Dictionary.Domain.TranslationGroupTag", b =>
                {
                    b.Property<int>("TranslationGroupTagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TranslationGroupTagId"));

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.Property<int>("TranslationGroupId")
                        .HasColumnType("integer");

                    b.HasKey("TranslationGroupTagId");

                    b.HasIndex("TagId");

                    b.HasIndex("TranslationGroupId");

                    b.ToTable("TranslationGroupTags", "dictionary");
                });

            modelBuilder.Entity("Dictionary.Domain.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WordId"));

                    b.Property<string>("Article")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Conjugation")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("LanguageCode")
                        .HasColumnType("integer");

                    b.Property<string>("Plural")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("WordId");

                    b.HasIndex("Text");

                    b.ToTable("Words", "dictionary");
                });

            modelBuilder.Entity("Dictionary.Domain.WordTranslationGroup", b =>
                {
                    b.Property<int>("WordTranslationGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WordTranslationGroupId"));

                    b.Property<int>("TranslationGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("WordId")
                        .HasColumnType("integer");

                    b.HasKey("WordTranslationGroupId");

                    b.HasIndex("TranslationGroupId");

                    b.HasIndex("WordId");

                    b.ToTable("WordTranslationGroups", "dictionary");
                });

            modelBuilder.Entity("Dictionary.Domain.TranslationGroupTag", b =>
                {
                    b.HasOne("Dictionary.Domain.Tag", "Tag")
                        .WithMany("TranslationGroupTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dictionary.Domain.TranslationGroup", "TranslationGroup")
                        .WithMany("TranslationGroupTags")
                        .HasForeignKey("TranslationGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("TranslationGroup");
                });

            modelBuilder.Entity("Dictionary.Domain.WordTranslationGroup", b =>
                {
                    b.HasOne("Dictionary.Domain.TranslationGroup", "TranslationGroup")
                        .WithMany("WordTranslationGroups")
                        .HasForeignKey("TranslationGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Dictionary.Domain.Word", "Word")
                        .WithMany("WordTranslationGroups")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TranslationGroup");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Dictionary.Domain.Tag", b =>
                {
                    b.Navigation("TranslationGroupTags");
                });

            modelBuilder.Entity("Dictionary.Domain.TranslationGroup", b =>
                {
                    b.Navigation("TranslationGroupTags");

                    b.Navigation("WordTranslationGroups");
                });

            modelBuilder.Entity("Dictionary.Domain.Word", b =>
                {
                    b.Navigation("WordTranslationGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
